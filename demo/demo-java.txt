JAVA

1. 

I am trying to make a game and attempting to make a "mute" and "unmute" button, but I cant figure out how to make it so when you push the button it stops the same clip that is being played at the beginning of the program. (using different methods of course).

I attempted to make the clip and audio public, but I keep getting an error and I'm not sure why.

**public class** TowerDefense 
{
    String `filepath` = "MenuTheme.wav";
    **private** Clip `clip`;
**void** playMusic(String musicLocation) 
{
    **try**{
        File musicPath = **new** File(musicLocation);

        **if**(musicPath.exists())
        {
        AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
        `clip` = AudioSystem.getClip();
        `clip`.open(audioInput);
        `clip`.start();
        `clip`.loop(Clip.`LOOP_CONTINUOUSLY`);
        }
    }

    **catch**(Exception ex)
    {
        ex.printStackTrace();
    }
}
**void** pauseMusic(String musicLocation2)
{
**long** clipTimePosition = `clip`.getMicrosecondPosition();
`clip`.stop();    
}
==============
//this is in a different private method called Options
panel.setButtonsActionListener2(**new** ActionListener(){
    @Override
    **public void** actionPerformed(ActionEvent e){
    frame.dispose();
        TowerDefense musicObject = new TowerDefense();
        musicObject.pauseMusic(`filepath`);
    Options();
        }
    });
I was expecting an output of the clip stopping and then you can either make it play again or keep it muted. In this case it just says error when I press the "mute" button.

2. 

Some advice please.

In an android app I will need to dynamically change the application language without restarting the app... like a kiosk. Reloading the activity view is not an issue.

Do you see any issues using this approach?

Either loading the string in each activity view or once in a base view, perhaps into an enum. There are only 3 or 4 views. It's a small app.

DisplayMetrics metrics = standardResources.getDisplayMetrics();
Configuration config = new Configuration(standardResources.getConfiguration());
config.locale = new Locale("fr");
Resources defaultResources = new Resources(assets, metrics, config);
String ageLabel = defaultResources.getString(R.string.ENTER_YOUR_AGE);
SdkVersion 26 Java 1.8

Thanks!!!

3.

I have a simple Java server application implemented using com.sun.net.HttpServer API. It receives REST requests almost every second, reads a large HashMap for some texts and simply sends back the texts after some processing. The server part simply looks like this:

public class Server implements Runnable {
    static final Logger logger = LogManager.getLogger(Server.class);
    static int serverPort = 9002;
    HttpServer server;

    public Server() {
        Thread t = new Thread(this);
        t.start();
    }

    public void run() {
        try {
            server = HttpServer.create(new InetSocketAddress(serverPort), 0);
            logger.info("EventRetriever REST server listening to port: " + serverPort);
            server.createContext("/getEvents", new MedatadaHandler());
            server.setExecutor(null);
            server.start();
        } catch (IOException e) {
            logger.error(e);
        }
    }

    class MedatadaHandler implements HttpHandler {
    @Override
            public void handle(HttpExchange he) throws IOException {
            //...
            String response = requestEvents();
            he.sendResponseHeaders(200, response.length());
            OutputStream os = he.getResponseBody();
            os.write(response.toString().getBytes());
            os.close();
    }
}
//some other functions...

    public String requestEvents(){
    //read from a HashMap, some processing, creating a JSON and sends it while logging it in file
            logger.info(jsonString);
            return jsonString;
    }
}
}

While running as a docker container, I see the memory usage increases over time, like an average of few MB over few seconds. Apparently, somewhere here we have a memory leak. Is it the unused objects, the j4logger loggings, or whatnot, I don't really know. I just tried to call a System.gc() explicitly once every few minutes. It does some remedy, but I am not sure where the problem is coming from.

What is the problem and how to fix it?

EDIT: how do I know the problem is coming from this part of program? Well, I have other thread responsible for filling those HashMaps every 5 mins, then going to sleep. Even when that's on sleep, I see memory increase. The only part is this server which is serving every second.



4. (JAVA AND IF ) > in Video

I was trying to code some exercise examples (as i am a java beginner). The given solution included the max() function of the Java Math library Math.max(). I did not want use Math.max and instead i use some if and else combinations as it should only determine the max value of three numbers. It works but i did not understand why the compiler wants the variable w to be initialized when he do not requires it for the other variables used.

public class RGBtoCMYK {
    public static void main(String[] args) {
        int R = Integer.parseInt(args[0]);
        int G = Integer.parseInt(args[1]);
        int B = Integer.parseInt(args[2]);
        Double C;
        Double M;
        Double K;
        Double Y;
        Double w; // if i initialize here with w=0 it works

        if (R == 0 && B == 0 G == 0) {
            C = 0;
            M = 0;
            Y = 0;
            K = 1;
            System.out.println(CMYK);
        } else {
            if (R > G && R > B) {
                w = R;
            } else {
                if (G > R && G > B) {
                    w = G;
                } else {
                    if (B > R && B > G) {
                        w = B;
                    }
                }
            }
        }
        System.out.printl(w)
    }
}   


5.

 am sure that this has been asked at some point and answered but all the questions I have reviewed either don't seem to apply to me or don't make sense.

I have not needed to utilize external jars and have always used just the JDK in the past but wanted to make sure I knew how to do this. I created an application to compute and validate a file checksum against another file and moved several functions to an external jar to reference in my code.

I am using IntelliJ as my IDE. I can compile and run the code just fine from IntelliJ but when I create the executable JAR file and run it, any function referenced in my JAR file is throwing a NoClassDefFoundError. I am not sure what I am doing wrong.

I have listed the Jar in the manifest Class-Path

Manifest-Version: 1.0
Class-Path: lib/Utilities.jar
Main-Class: net.rethfam.checksumChecker.Main
I have made sure the JAR file is listed in the Project Dependencies

And that it is to be exported in the JAR

I have even validated that the jar file is listed in the executable jar using jar tf

jar tf ChecksumChecker.jar
META-INF/MANIFEST.MF
lib/
lib/Utilities.jar
META-INF/
net/
net/rethfam/
net/rethfam/checksumChecker/
net/rethfam/checksumChecker/controllers/
net/rethfam/checksumChecker/controllers/MainScreenController$1.class
net/rethfam/checksumChecker/controllers/MainScreenController.class
net/rethfam/checksumChecker/images/
net/rethfam/checksumChecker/images/checkImage-128x128.png
net/rethfam/checksumChecker/images/checkImage-16x16.png
net/rethfam/checksumChecker/images/checkImage-256x256.png
net/rethfam/checksumChecker/images/checkImage-32x32.png
net/rethfam/checksumChecker/images/checkImage-512x512.png
net/rethfam/checksumChecker/images/checkImage-64x64.png
net/rethfam/checksumChecker/images/CheckSumIcon.ico
net/rethfam/checksumChecker/images/Origional/
net/rethfam/checksumChecker/images/Origional/checkImage-Orig.png
net/rethfam/checksumChecker/Main.class
net/rethfam/checksumChecker/views/
net/rethfam/checksumChecker/views/MainScreen.fxml
Utilities.jar
I am ultimately at a loss at this point and tired of hitting my head against this wall. I don't feel like it should be this difficult.

Caused by: java.lang.NoClassDefFoundError: rethfam/ultis/fileUtils
    at net.rethfam.checksumChecker.controllers.MainScreenController.handleFileChooser(MainScreenController.java:68)
    ... 58 more
Caused by: java.lang.ClassNotFoundException: rethfam.ultis.fileUtils
    at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    ... 59 more



6. (JAVA AND IF)

I Always go to ELSE statement, Please Help `if (session == null) {

        request.setAttribute("stts_log", "Login");
        request.setAttribute("btn_modal", "exambutton");
        request.setAttribute("btn_href", "#");
        out.print("Please login first");  
        RequestDispatcher rd=request.getRequestDispatcher("index2.jsp");  
        rd.forward(request, response); 

    } else {
        request.setAttribute("sess", session);
        request.setAttribute("stts_log", "Logout");
        request.setAttribute("btn_modal", "");
        request.setAttribute("btn_href", "ControllerServlet");
        RequestDispatcher rd=request.getRequestDispatcher("index2.jsp");  
        rd.forward(request, response); 
    }`


7. (PYTHON & JAVA)
Why Java's URLEncoder does not generate what Python's urllib.parse.urlencode does?

My questions seem to be as same as this question: Java equivalent of Pythons urllib.urlencode(HashMap based UrlEncode) however, is not. Because its answer is not right (or I am doing something wrong that I am not aware of).

I have this Python3 code:

def create_vxttoken_data(path_uri, expiry, reuse, shared_secret):
    # Combine the parameters into a URL-encoded string
    message = []
    message.extend([('pathURI', path_uri)])
    message.extend([('expiry', expiry)])
    message.extend([('reuse', reuse)])
    print(message)

    url_encoded_message = urlencode(message)
    print(url_encoded_message)

    # ... rest of the code
This is its output:

[('pathURI', 'http://my.domain.net/*'), ('expiry', 1553937508), ('reuse', 0)]
pathURI=http%3A%2F%2Fmy.domain.net%2F%2A&expiry=1553937508&reuse=0
I tried to write it in Kotlin. So this is my code:

fun main(args: Array<String>) {
    val queryParams = "pathURI=$PATH_URI&expiry=${expiryTime(10)}&reuse=$REUSE"
    println(queryParams)

    val encodedQueryParams = URLEncoder.encode(queryParams, Charsets.UTF_8.toString())
    println(encodedQueryParams)

    // ... rest of the code
This is its output:

pathURI=http://my.domain.net/*&expiry=1553938196&reuse=0
pathURI%3Dhttp%3A%2F%2Fmy.domain.net%2F*%26expiry%3D1553938196%26reuse%3D0
By compar of the second line of outputs you see that Kotlin/Java has converted = while Python didn't. Also, Kotlin/Java didn't translate * while Python does. I want Kotlin/Java generates output like what Python does. The rest of my code is creating a token based on this info. Consequently, my authentication fails.

Note: In my Kotlin/Java file, when I replace

val encodedQueryParams = URLEncoder.encode(queryParams, Charsets.UTF_8.toString())

By

val encodedQueryParams = "pathURI=http%3A%2F%2Fmy.domain.net%2F%2A&expiry=1553937508&reuse=0"
Then my rest code will generate a token which is exactly as same as what Python generates. Therefore, it indicates that something is wrong with my URLEncoder.encode.


8. (JAVA MYSQL)

I'm having a problem with Spring JPA.

This is my Domain:

@Entity
public class Courier {

    @Id
    private int id;

    @Enumerated(EnumType.STRING)
    private VehicleType vehicle;

    @Enumerated(EnumType.STRING)
    private Status status;

    @Embedded
    private Location location;

    public Courier(int id, Location location, VehicleType vehicle, Status status) {
        this.id = id;
        this.location = location;
        this.vehicle = vehicle;
        this.status = status;
     }
And this is my embedded class:

@Embeddable
public class Location {

    private double coorx;
    private double coory;

    public Location(double coorx, double coory) {
        this.coorx = coorx;
        this.coory = coory;
    }
This is how I have configured my schema.sql for test environment:

DROP TABLE courier
DROP TABLE vehicle

CREATE TABLE courier (
    id INT PRIMARY KEY,
    vehicle VARCHAR(100),
    status VARCHAR(100),
    coorx DOUBLE,
    coory DOUBLE
);

CREATE TABLE vehicle (
    id VARCHAR(100) PRIMARY KEY,
    weight_limit BIGINT,
    distance_limit BIGINT
);

INSERT INTO courier VALUES (1, 1, 1, 'CAR', 'IDLE');
INSERT INTO courier VALUES (2, 13, 34, 'MOTORCYCLE', 'DELIVERING');

INSERT INTO vehicle VALUES ('BIKE', 15, 5);
INSERT INTO vehicle VALUES ('MOTORCYCLE', 30, 10);
INSERT INTO vehicle VALUES ('CAR', 100, 0);
INSERT INTO vehicle VALUES ('TRUCK', 0, 0);
This is my test (I know that this doesn't do anything, it's only for hit the HSQLDB):

@RunWith(SpringRunner.class)
@SpringBootTest
public class WebserverApplicationTests {

    @Autowired
    CourierService courierService;

    @Test
    public void test(){
        List<Courier> couriers = courierService.findAll();
    }
}
When I execute this, it throws this:

2019-03-29 20:12:00.969  INFO 87347 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory Hibernate: select courier0_.id as id1_0_, courier0_.coorx as coorx2_0_, courier0_.coory as coory3_0_, courier0_.status as status4_0_, courier0_.vehicle as vehicle5_0_ from courier courier0_
2019-03-29 20:12:01.207  WARN 87347 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1054, SQLState: 42S22
2019-03-29 20:12:01.207 ERROR 87347 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Unknown column 'courier0_.coorx' in 'field list'
It doesn't recognize the coorx column. I made a lot of research and I didn't understand what I'm doing wrong.

The courierService calls courierRepository.findAll(). The CourierRepository extends JpaRepository<Courier, Integer>.


