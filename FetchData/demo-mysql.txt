MYSQL 

1. Python & Mysql

I know there are questions similar to this one, but none of them have resolved my problem. I'm trying to put some JSON strings "{a:b, c:d...}" into MySQL. I can't use the JSON datatype in MySQL. I'm running 5.5 and don't want to update right now.

Code:

prop = blablabla,                               
interface = 1,                             
value = "val1"
data = {"actual_value":""}

prop = this.split(".", 1)[0]
interface_value = this.split(".", 1)[1]
interface = int(interface_value.split("=", 1)[0])
value = interface_value.split("=", 1)[1]

if "\"" not in interface_value.split("=")[1]:
  value = int(interface_value.split("=")[1])
data["actual_value"] = value

query = "UPDATE Blabla SET %s=\"%s\" WHERE InterfaceID=%s"
cursor.execute(query, (prop, str(data), interface,))
Error:

Traceback (most recent call last):
  File "ex1.py", line 69, in <module>
    cursor.execute(querry, (prop, str(dates), interface,))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/connection.py", line 553, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/connection.py", line 442, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''blablabla'="'{\'actual_value\': \'\"val1\"\'}'" WHERE InterfaceID=1' at line 1

2. 

I need to execute a trigger that includes an UPDATE statement on the same table.

I have tried this code. If I check the table, the row is updated, but I get an error message:

Can't update table 'Orders' in stored function/trigger because it is already used by statement which invoked this stored function/trigger

DROP TRIGGER IF EXISTS UpdateTotal;

DELIMITER |

CREATE TRIGGER UpdateTotal BEFORE UPDATE ON Orders
FOR EACH ROW 
BEGIN
  UPDATE Orders P1
    SET NEW.order_total = NEW.order_total + 3.02
    WHERE order_id IN (SELECT * FROM (SELECT MAX(order_id) FROM Orders) P2);
END

|

DELIMITER ;

3. JAVASCRIPT MYSQL

I'm using consign to make the autoload from modules on my Node JS api, in this I load all my routes, models and my database connection function, When I run the nodemom app the module that makes the connection is loaded but I Cannot connect to the database, he throws me this error TypeError: Cannot read property 'db' of undefined

Look at my tree files:

enter image description here

I can load the routes cuz

db.js (File that has de database configuration)

var mysql = require('mysql');

var connMySQL = function () {
    console.log("I've Started the connection")
    return mysql.createConnection({
        host: 'localhost',
        user: 'root',
        password: '',
        database: 'agimplant'
    });
}

module.exports = function () {
    console.log("I've loaded this function")
    return connMySQL;
}
Server.js

var express = require('express'),
    bodyparser = require('body-parser'),
    consign = require('consign'),
    app = express();

consign()
    .include('./src/routes')
    .then('./src/config/db.js')
    .then('./src/models')
    .into(app);

app.use(bodyparser.urlencoded({ extended: true }));

app.listen(4000, function () {
    console.log("Servidor ON");
});

module.exports = app;
Connection Calling on Home.route.js

module.exports = function (app) {
    app.get('/', (req, res) => {
        console.log("Call the Connection Here")
        var connection = app.config.db();
    });
}

4. PYTHON MYSQL
I know there are questions similar to this one, but none of them have resolved my problem. I'm trying to put some JSON strings "{a:b, c:d...}" into MySQL. I can't use the JSON datatype in MySQL. I'm running 5.5 and don't want to update right now.

Code:

prop = blablabla,                               
interface = 1,                             
value = "val1"
data = {"actual_value":""}

prop = this.split(".", 1)[0]
interface_value = this.split(".", 1)[1]
interface = int(interface_value.split("=", 1)[0])
value = interface_value.split("=", 1)[1]

if "\"" not in interface_value.split("=")[1]:
  value = int(interface_value.split("=")[1])
data["actual_value"] = value

query = "UPDATE Blabla SET %s=\"%s\" WHERE InterfaceID=%s"
cursor.execute(query, (prop, str(data), interface,))
Error:

Traceback (most recent call last):
  File "ex1.py", line 69, in <module>
    cursor.execute(querry, (prop, str(dates), interface,))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/cursor.py", line 569, in execute
    self._handle_result(self._connection.cmd_query(stmt))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/connection.py", line 553, in cmd_query
    result = self._handle_result(self._send_cmd(ServerCmd.QUERY, query))
  File "/usr/local/lib/python3.4/dist-packages/mysql/connector/connection.py", line 442, in _handle_result
    raise errors.get_exception(packet)
mysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''blablabla'="'{\'actual_value\': \'\"val1\"\'}'" WHERE InterfaceID=1' at line 1

