R

1. 
In one of my homework, I am asked to print the prices of a bond over 2015,2016,2017,2018. Since 2015,2016 have 252 trading days, 2017 with 251 and 2018 with 250, I need to write an if statement. Here is my attempt:

plt = function(a){
  if (a == 2015){
    x = 1:252
  }else if ( a == 2016){
    x = 1:252
    }else if (a == 2017){
    x = 1:251
  }else{
      x = 1:250
    }
  plot(x = x , y = data[data$Year == a,5] , type = "l" , col = "red")
  }
However,when I input

function(c(2015,2016,2017,2018)
only draft of 2015 shows up and R returns

Warning messages:
1: In if (a == 2015) { :
  the condition has length > 1 and only the first element will be used
2: In data$Year == a :
  longer object length is not a multiple of shorter object length  
If I input these years seperately, it gives four perfect plots.

Many thanks in advance.




2. FOR LOOP AND R
I have a matrix and an adjacency/graph object. And I wrote a big for loop:

vector_t1 <- rep(1, 2878)
vector_t1 <- append(vector_t1, c(0))
    LR_BASE_new <- matrix(0L, nrow= 2879, ncol=2879)
    n <- 1:2879
         for (i in seq_along(n)) {
        for (j in seq_along(n)) {
          LR_BASE_new[j,i]<- ((are.connected(jan_adj_g_small, i, j))/outnodes[j])*vector_t1[j]
        }
          }
This works as intended, but the for loops take a lot of time. Now I'm trying to do the same thing with the apply() function but I can't quite figure it out. This is what I currently have:

leaderFUN <- function(Src_Matrix, size1, graphobject) {


 i <<- 1:size1
  j <<- 1:size1
  vector_t1 <- rep(1, size1)
  vector_t1 <- append(vector_t1, c(0))
  outnodes <- degree(graphobject, mode = "out")
  LR_BASE_new <- matrix(0L, nrow= size1, ncol=size1)
  LR_BASE_new[j,i]<- ((are.connected(graphobject, i, j))/outnodes[j])*vector_t1[j]
  return(LR_BASE_new)
}
size <- 2879
asd <- apply(LR_BASE_new,c(1,2), leaderFUN, size1 = size, graphobject =jan_adj_g_small)
I'm trying to change things up and I get either "Error: cannot allocate vector of size..." or an unused argument Error. Is there an easy way to replace the for loops with an apply or multiple apply functions?





3. 


Error in lav_data_full(data = data, group = group, cluster = cluster, : lavaan ERROR: missing observed variables in dataset: Acon

I am trying to specify a SEM model and I keep getting the "missing observed variables" error message in the listed above.

I am attempting to test a 3 factor model for a latent variable but the error message is suggesting that there are one or more missing variables for the first factor. This doesn't make sense because I have tested a single factor model with the same variables a did not receive this error message. I have also inspected the data set to ensure that the variables match in the data set and the code. Does anyone have an idea where I went wrong?

This is the code that I'm using for the 3 factor model:

factor.model.AUDIT3 <-'
ACon =~ NA*b1_a_R + b1_a_R + b2_a_R + b3_a_R
ADep =~ NA*b4_a_R + b4_a_R + b5_a_R + b6_a_R
AHarm =~ NA*b7_a_R + b7_a_R + b8_a_R + b9_a_R + b10_a_R

AUDITTot =~ NA*Acon + Acon + ADep + AHarm

AUDITTot ~~ 1*AUDITTot
'
mySEM.fit3 <- sem(factor.model.AUDIT3, SEMProject) Error in lav_data_full(data = data, group = group, cluster = cluster, : lavaan ERROR: missing observed variables in dataset: Acon
This is the code for the single factor model which worked perfectly fine:

factor.modelAUDIT <-'
AUDITTot =~ NA*b1_a_R+A1*b1_a_R+A2*b2_a_R+A3*b3_a_R+A4*b4_a_R+A5*b5_a_R+
A6*b6_a_R+A7*b7_a_R+A8*b8_a_R+A9*b9_a_R+A10*b10_a_R
'
I realize that the paths are labeled in the second code, but that's not the issue that I'm dealing with.

Thank you in advance for your help!




4. 
How to set x,y in ggplot aes with one dimension dataframe?

df <- data.frame(
    cola = c('1',NA,'c','1','1','e','1',NA,'c','d'),
    colb = c("A",NA,"C","D",'a','b','c','d','c','d'),
    colc = c('a',NA,'c','d','a',NA,'c',NA,'c','d'),stringsAsFactors = TRUE)

bad<-lapply(df, function(x) sum(is.na(x))/nrow(df))
bad<-as.data.frame(bad)
I want to make bar plot to one dimension dataframe bad.

X axis should be cola,colb,colc,Y axis should be 0.2,0.1,0.3. Then I tried but failed:

ggplot(bad,aes(x=colnames(bad), y=bad[1,])) + 
    geom_bar(stat='identity')
As to one dimension dataframe,how to set aes(x=?,y=?)?





5. 
Date.Time column split

I am trying to split the Date.Time column in my data table to separate date and time columns. currently the column is as character.

this is what I already tried but it just gave me a column with 2019 dates. I don't want the year to be 2019 so doesn't work. even if it does, not sure how to get the time to a separate column

office$date <- as.Date(office$Date.Time, format = '%m/%d')

office$date <- as.Date(office$Date.Time, format = '%m/%d')



6.

R: Trouble using ifelse to run multiple logical tests across dataframes to create new column


I'm trying to using the retrosheet baseball game data name the catcher for any given pitch pulled during the pitfx era. I've been using ifelse to run a series of tests to find the starting catcher. The code and errors are below -- also I intend to after getting this to work instead of printing "no" should it fail have similar ifelse tests nested in this until I work through from HmBat1Pos to HmBat9Pos...etc

atbat$starting_catcher_retro = ifelse(((atbat$date = retro_games$Date)                                       
                         & (atbat$pitcher_name = retro_games$HmStPchNm) 
                         & (atbat$num = 1) 
                         & (atbat$inning_side = "top")
                         & (retro_games$HmBat1Pos = 2)), 
                         retro_games$HmBat1ID, "no")
errors

Error in `$<-.data.frame`(`*tmp*`, date, value = c(13963, 13964, 13968,  : 
  replacement has 26726 rows, data has 2146373

  I then tried to take out some of the code testing the date and still got errors. So I ran this instead

atbat$starting_catcher_retro = ifelse(((atbat$num = 1) 
                                         & (atbat$inning_side = "top")
                                         &(retro_games$HmBat1Pos = 2)), 
                                         retro_games$HmBat1ID, "no")
and got these other errors

Error in (atbat$num = 1) & (atbat$inning_side = "top") : 
  operations are possible only for numeric, logical or complex types

  response to comments

this was the code that I added and the error returned

> merged_df <- merge(atbat, retro_games,
+                    by.x = c("date", "pitcher_name"),
+                    by.y = c("Date", "HmStPchNm"), all.x = FALSE)
> 
> merged_df$starting_catcher_retro = with(merged_df, 
+                                         ifelse((num == 1) 
+                                                & (inning_side == "top")
+                                                & (HmBat3Pos == 2), 
+                                                HmBat3ID, "no"))
> 
> atbat$starting_catcher_retro <- merged_df$starting_catcher_retro[match(merged_df$unique_id, atbat$unique_id)]
Error in `$<-.data.frame`(`*tmp*`, starting_catcher_retro, value = c("no",  : 
  replacement has 566448 rows, data has 2146373
I also attempted a different approach to the one above which is based on the idea I had in my head -- below is that code and the errors returned where everything looks like it should work but there isn't even a new column created







6. Python, For, and R


Navigate and append csv from child directories

I am in a directory that holds 36 different folders. Each folder has a single csv in it. I want to append each of these together to make a large data frame in python.

in R, I would do this:

cwd = getwd() #get current directory
fil = list.files() #get list of all files/folders in the directory
Bigdf = NULL #initialize empty df
for(i in fil){ #read through all folders in current directory
    setwd(paste0(cwd,'/',i)) #navigate to i'th folder
    fil2 = list.files() #get list of files in i'th folder
    for(j in fil2){
        a = read.csv(paste0(cwd,'/',i,'/',j)) #read in all csv's 
        Bigdf = rbind(Bigdf,a[,c(2,4:11)]) #append desired columns to data frame
    }
    setwd(cwd) 
}
How would I go about doing something like this in python?

I tried to implement How can I read the contents of all the files in a directory with pandas? and How do I list all files of a directory? and to no avail. I think I am missing something obvious, and hope someone can point me in the right direction.




HTML & R

I like to fill an area in a shiny app with card elements. The items flow into the next row when there is not enough space. This can be achieved with flowLayout.

enter image description here

But I do not know the number of items in advance, so I need to create the card elements in a loop. But when I use lapply inside flowLayout all elements are shown below each other.

How to fix this, so that items are shown in rows next to each other?

library(shiny)

card <- function(.img, .species, .sepal.length) {
  HTML(
    paste0(
      '<div class="card">
      <img src="', .img, '" style="width:100%">
      <div class="container">
      <h4><i>', .species, '</i></h4>
      <hr>
      <p>Sepal Length: ', .sepal.length, '</p>
      </div>
      </div>')
  )
}

img.src <- "https://www.plant-world-seeds.com/images/item_images/000/007/023/large_square/iris_baby_blue.jpg?1500653527"

ui <- fluidPage(
  tags$head(tags$style('.card {
                         width: 250px;
                       clear: both;
                       /* Add shadows to create the "card" effect */
                       box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
                       transition: 0.3s;
                       }
                       /* On mouse-over, add a deeper shadow */
                       .card:hover {
                       box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
                       }
                       /* Add some padding inside the card container */
                       .container {
                       width: 250px;
                       padding: 2px 16px;
                       }')),
  uiOutput("cards")
)

server <- function(input, output, session) {

  # This looks as expected

  # output$cards <- renderUI({
  #   shiny::flowLayout(
  #     cellArgs = list(
  #       style = "
  #           width: auto;
  #           height: auto;
  #           margin: 5px;
  #           "),
  #     card(img.src,
  #          .species = iris[1, "Species"],
  #          .sepal.length = iris[1, "Sepal.Length"]),
  #     card(img.src,
  #          .species = iris[2, "Species"],
  #          .sepal.length = iris[2, "Sepal.Length"]),
  #     card(img.src,
  #          .species = iris[3, "Species"],
  #          .sepal.length = iris[3, "Sepal.Length"]),
  #     card(img.src,
  #          .species = iris[4, "Species"],
  #          .sepal.length = iris[4, "Sepal.Length"])
  #   )
  # })

  # Now elements are below each other when using lapply

  output$cards <- renderUI({
    shiny::flowLayout(
      cellArgs = list(
        style = "
        width: auto;
        height: auto;
        margin: 5px;
        "),
      lapply(1:4, function(.x) card(img.src,
                       .species = iris[.x, "Species"],
                       .sepal.length = iris[.x, "Sepal.Length"]))
      )
  })
}

shinyApp(ui, server)